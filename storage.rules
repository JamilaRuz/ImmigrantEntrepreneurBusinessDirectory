rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Common function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Limit file size to 5MB
    function isValidSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB
    }
    
    // Only allow image uploads
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Profile images folder 
    match /profile_images/{fileName} {
      // Anyone can read profile images
      allow read: if true;
      
      // Only authenticated users can upload profile images
      allow write: if isSignedIn();
    }
    
    // Logo images folder
    match /logo_images/{fileName} {
      // Anyone can read logo images
      allow read: if true;
      
      // Only authenticated users can upload logo images
      allow write: if isSignedIn();
    }
    
    // Header images folder
    match /header_images/{fileName} {
      // Anyone can read header images
      allow read: if true;
      
      // Only authenticated users can upload header images
      allow write: if isSignedIn();
    }
    
    // Portfolio images folder
    match /portfolio_images/{fileName} {
      // Anyone can read portfolio images
      allow read: if true;
      
      // Only authenticated users can upload portfolio images
      allow write: if isSignedIn();
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 